// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using trabalho_rodeio.Models;

#nullable disable

namespace trabalho_rodeio.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20231013180155_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("trabalho_rodeio.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("trabalho_rodeio.Models.Montaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("PeaoId")
                        .HasColumnType("int");

                    b.Property<int>("TouroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PeaoId");

                    b.HasIndex("TouroId");

                    b.ToTable("Montarias");
                });

            modelBuilder.Entity("trabalho_rodeio.Models.Peao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuantidadeMontarias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Peoes");
                });

            modelBuilder.Entity("trabalho_rodeio.Models.Touro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QuantidadeMontarias")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Touros");
                });

            modelBuilder.Entity("trabalho_rodeio.Models.Montaria", b =>
                {
                    b.HasOne("trabalho_rodeio.Models.Peao", "Peao")
                        .WithMany()
                        .HasForeignKey("PeaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("trabalho_rodeio.Models.Touro", "Touro")
                        .WithMany()
                        .HasForeignKey("TouroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peao");

                    b.Navigation("Touro");
                });
#pragma warning restore 612, 618
        }
    }
}
